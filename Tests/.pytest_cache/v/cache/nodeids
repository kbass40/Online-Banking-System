[
  "test_AuthDB.py::test_AuthDB_creation",
  "test_AuthDB.py::test_fail_authenticate_user_with_bad_email_type",
  "test_AuthDB.py::test_fail_authenticate_user_with_bad_password_type",
  "test_AuthDB.py::test_fail_authenticate_user_with_invalid_email",
  "test_AuthDB.py::test_fail_create_user_with_bad_email_type",
  "test_AuthDB.py::test_fail_create_user_with_bad_password_type",
  "test_AuthDB.py::test_fail_create_user_with_invalid_email",
  "test_AuthDB.py::test_fail_create_user_with_invalid_password",
  "test_LogDatabase.py::test_LD_default_creation",
  "test_LogDatabase.py::test_LD_creation_failure",
  "test_LogDatabase.py::test_LD_insert_time_failure",
  "test_LogDatabase.py::test_LD_insert_type_failure",
  "test_LogDatabase.py::test_LD_insert_message_failure",
  "test_LogDatabase.py::test_LD_insert_log",
  "test_LogDatabase.py::test_LD_get_size",
  "test_LogDatabase.py::test_LD_clear_logs",
  "test_Logger.py::test_log_transaction_message_failure",
  "test_Logger.py::test_log_transaction_typing_failure",
  "test_Logger.py::test_log_transaction",
  "test_Logger.py::test_print_Logger",
  "test_Oracle.py::test_fail_buy_stocks_from_invalid_quantity_type",
  "test_Oracle.py::test_fail_buy_stocks_from_non_int_quantity_type",
  "test_Oracle.py::test_fail_buy_stocks_from_raw_int_quantity_type",
  "test_Oracle.py::test_fail_sell_stocks_from_invalid_quantity_type",
  "test_Oracle.py::test_fail_sell_stocks_from_non_int_quantity_type",
  "test_Oracle.py::test_fail_sell_stocks_from_raw_int_quantity_type",
  "test_Oracle.py::test_jsonify",
  "test_Ubisoft.py::test_fail_buy_stocks_from_invalid_quantity_type",
  "test_Ubisoft.py::test_fail_buy_stocks_from_non_int_quantity_type",
  "test_Ubisoft.py::test_fail_buy_stocks_from_raw_int_quantity_type",
  "test_Ubisoft.py::test_fail_sell_stocks_from_invalid_quantity_type",
  "test_Ubisoft.py::test_fail_sell_stocks_from_non_int_quantity_type",
  "test_Ubisoft.py::test_fail_sell_stocks_from_raw_int_quantity_type",
  "test_Ubisoft.py::test_jsonify",
  "test_Apple.py::test_fail_buy_stocks_from_invalid_quantity_type",
  "test_Apple.py::test_fail_buy_stocks_from_non_int_quantity_type",
  "test_Apple.py::test_fail_buy_stocks_from_raw_int_quantity_type",
  "test_Apple.py::test_fail_sell_stocks_from_invalid_quantity_type",
  "test_Apple.py::test_fail_sell_stocks_from_non_int_quantity_type",
  "test_Apple.py::test_fail_sell_stocks_from_raw_int_quantity_type",
  "test_Apple.py::test_jsonify",
  "test_Facebook.py::test_fail_buy_stocks_from_invalid_quantity_type",
  "test_Facebook.py::test_fail_buy_stocks_from_non_int_quantity_type",
  "test_Facebook.py::test_fail_buy_stocks_from_raw_int_quantity_type",
  "test_Facebook.py::test_fail_sell_stocks_from_invalid_quantity_type",
  "test_Facebook.py::test_fail_sell_stocks_from_non_int_quantity_type",
  "test_Facebook.py::test_fail_sell_stocks_from_raw_int_quantity_type",
  "test_Facebook.py::test_jsonify",
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> Rewrote test_LogDatabase to fit SQLlite queries
=======
<<<<<<< refs/remotes/origin/authentication
>>>>>>> Added the failed sign up test, changed the sign in test to successful sign up test, and created videos for the tests
  "test_LogDatabase.py::test_MD_default_creation",
  "test_LogDatabase.py::test_MD_insert_time_failure",
  "test_LogDatabase.py::test_MD_insert_type_failure",
  "test_LogDatabase.py::test_MD_insert_message_failure",
<<<<<<< HEAD
<<<<<<< HEAD
  "test_LogDatabase.py::test_MD_insert_log",
=======
>>>>>>> Added the failed sign up test, changed the sign in test to successful sign up test, and created videos for the tests
<<<<<<< HEAD
=======
  "test_LogDatabase.py::test_MD_insert_log",
>>>>>>> Coverage v0.2
=======
>>>>>>> Added the failed sign up test, changed the sign in test to successful sign up test, and created videos for the tests
  "test_Google.py::test_fail_buy_stocks_from_invalid_quantity_type",
  "test_Google.py::test_fail_buy_stocks_from_non_int_quantity_type",
  "test_Google.py::test_fail_buy_stocks_from_raw_int_quantity_type",
  "test_Google.py::test_fail_sell_stocks_from_invalid_quantity_type",
  "test_Google.py::test_fail_sell_stocks_from_non_int_quantity_type",
  "test_Google.py::test_fail_sell_stocks_from_raw_int_quantity_type",
  "test_Google.py::test_jsonify"
<<<<<<< HEAD
=======
  "test_LogDatabase.py::test_MD_insert_log"
>>>>>>> Rewrote test_LogDatabase to fit SQLlite queries
=======
>>>>>>> Coverage v0.2
]